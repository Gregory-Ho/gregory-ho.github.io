{"version":3,"sources":["assets/me.jpg","Introduction/Introduction.jsx","util/timeline/TimelineWrapper.jsx","util/tool-pill/ToolPill.jsx","util/timeline/TimelineContent.jsx","util/tool-pill/Tools.jsx","Experience/Experience.jsx","Projects/Projects.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Introduction","className","params","src","require","alt","href","fontSize","style","React","Component","TimelineWrapper","this","props","title","children","ToolPill","tool","TimelineContent","layoutClass","toolList","tools","forEach","push","unshift","info","company","date","location","github","link","linkText","description","C","JAVA","JAVASCRIPT","SQL","HTML","CSS","REACT","ANGULAR","SPRING_BOOT","JobsList","Tools","Experience","id","map","job","ProjectsList","Projects","project","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,gC,mTCmE5BC,E,uKAzDP,OACI,yBAAKC,UAAU,gBACb,kBAAC,IAAD,CAAWA,UAAU,eACVC,OAAQ,CACN,UAAa,CACX,MAAU,CACR,MAAU,QAEZ,OAAU,CACR,MAAS,IACT,QAAW,CACT,QAAU,IAGd,KAAQ,CACN,MAAS,EACT,QAAU,EACV,KAAQ,CACN,MAAS,EACT,SAAY,KAGhB,YAAe,CACb,QAAU,GAEZ,KAAQ,CACN,QAAU,EACV,MAAS,EACT,UAAa,SACb,SAAY,WAK7B,yBAAKD,UAAU,wBACb,yBAAKA,UAAU,gBAAgBE,IAAKC,EAAQ,KAAqBC,IAAI,eACrE,wBAAIJ,UAAU,QAAd,kBACA,wBAAIA,UAAU,YAAd,2wBAGA,yBAAKA,UAAU,UACb,uBAAGA,UAAU,mCAAmCK,KAAK,2CACnD,kBAAC,IAAD,CAAcC,SAAS,QAAQC,MAAO,CAACD,SAAU,UAAU,0BAAMN,UAAU,gBAAhB,+BAE7D,uBAAGA,UAAU,qBAAqBK,KAAK,kCACrC,kBAAC,IAAD,CAAiBC,SAAS,QAAQC,MAAO,CAACD,SAAU,UAAU,0BAAMN,UAAU,gBAAhB,4BAEhE,uBAAGA,UAAU,iCAAiCK,KAAK,iCACjD,kBAAC,IAAD,CAAYC,SAAS,QAAQC,MAAO,CAACD,SAAU,UAAU,0BAAMN,UAAU,gBAAhB,iC,GAlDlDQ,IAAMC,WCsBlBC,G,qLAxBX,OACE,yBAAKV,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,4BAAKW,KAAKC,MAAMC,OAChB,yBAAKb,UAAU,cACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACf,yBAAKA,UAAU,QACf,yBAAKA,UAAU,aAMzB,yBAAKA,UAAU,iBACZW,KAAKC,MAAME,e,GApBQN,IAAMC,YCUrBM,G,8KARX,OACE,yBAAKf,UAAW,aAAeW,KAAKC,MAAMI,KAAK,IAC5CL,KAAKC,MAAMI,KAAK,Q,GAJFR,IAAMC,Y,qFCoGdQ,G,8KAxFX,IAAIC,EAAcP,KAAKC,MAAMM,YAEzBC,EAAW,GACXR,KAAKC,MAAMQ,OACbT,KAAKC,MAAMQ,MAAMC,SAAQ,SAACL,GACJ,UAAhBE,EACFC,EAASG,KAAK,kBAAC,EAAD,CAAUN,KAAMA,KAE9BG,EAASI,QAAQ,kBAAC,EAAD,CAAUP,KAAMA,QAMvC,IAAIQ,EAAO,yBAAKxB,UAAU,YACxB,yBAAKA,UAAW,qBAAuBkB,GAEnCP,KAAKC,MAAMa,SACX,yBAAKzB,UAAU,WACZW,KAAKC,MAAMa,QACZ,kBAAC,IAAD,CAAczB,UAAW,eAAiBkB,KAI5CP,KAAKC,MAAMc,MACX,yBAAK1B,UAAU,QACZW,KAAKC,MAAMc,KACZ,kBAAC,IAAD,CAAe1B,UAAW,YAAckB,KAI1CP,KAAKC,MAAMe,UACX,yBAAK3B,UAAU,YACZW,KAAKC,MAAMe,SACZ,kBAAC,IAAD,CAAgB3B,UAAW,gBAAkBkB,KAI/CP,KAAKC,MAAMgB,QACT,yBAAK5B,UAAU,UACb,uBAAGK,KAAMM,KAAKC,MAAMgB,QAApB,2BAGA,kBAAC,IAAD,CAAY5B,UAAW,cAAgBkB,KAI3CP,KAAKC,MAAMiB,MAAQlB,KAAKC,MAAMkB,UAC9B,yBAAK9B,UAAU,gBACb,uBAAGK,KAAMM,KAAKC,MAAMiB,MACjBlB,KAAKC,MAAMkB,UAEd,kBAAC,IAAD,CAAY9B,UAAW,YAAckB,KAIvCP,KAAKC,MAAMQ,OACX,yBAAKpB,UAAU,SACZmB,EACD,kBAAC,IAAD,CAAWnB,UAAW,aAAekB,OAMzCa,EAAc,yBAAK/B,UAAU,YAC/B,yBAAKA,UAAW,4BAA8BkB,GAC5C,yBAAKlB,UAAW,QAAUkB,IAC1B,4BACGP,KAAKC,MAAMC,OAEd,uBAAGb,UAAU,qBACVW,KAAKC,MAAMmB,eAKlB,OACE,yBAAK/B,UAAU,iBACb,yBAAKA,UAAU,OACI,UAAhBkB,EAA0BM,EAAOO,EACjB,UAAhBb,EAA0Ba,EAAcP,Q,GAnFrBhB,IAAMC,YCZvBuB,EAAe,CAAC,IAAK,uBACrBC,EAAe,CAAC,OAAQ,uBACxBC,EAAe,CAAC,aAAc,uBAI9BC,EAAe,CAAC,MAAO,uBAGvBC,EAAe,CAAC,OAAQ,kBACxBC,EAAe,CAAC,MAAO,kBACvBC,EAAe,CAAC,QAAS,kBACzBC,EAAe,CAAC,UAAW,kBAM3BC,EAAe,CAAC,cAAe,sBCbtCC,EAAW,CACjB,CACE,YAAe,QACf,QAAW,aACX,KAAQ,sBACR,SAAY,cACZ,MAAS,CAACC,EDKgB,CAAC,QAAS,sBAZV,CAAC,OAAQ,uBACT,CAAC,KAAM,uBCMyBA,EAAkBA,EAAYA,GACxF,MAAS,uBACT,YACE,wBAAI1C,UAAU,8BACZ,yKACA,kJACA,uKAEH,CACD,YAAe,SACf,QAAW,oBACX,KAAQ,sBACR,SAAY,cACZ,MAAS,CDAiB,CAAC,WAAY,mBADb,CAAC,UAAW,mBAFZ,CAAC,WAAY,sBCGkB0C,EAAeA,EAAmBA,GAC3F,MAAS,yBACT,YACE,wBAAI1C,UAAU,+BACZ,sJACA,gKACA,kGAEH,CACC,YAAe,QACf,QAAW,YACX,KAAQ,sBACR,SAAY,cACZ,MAAS,CDHe,CAAC,aAAc,oBArBf,CAAC,cAAe,kBANhB,CAAC,OAAQ,uBC8B0B0C,EDZnC,CAAC,OAAQ,mBCYkDA,GACnF,MAAS,oCACT,YACE,wBAAI1C,UAAU,+BACZ,iJACA,wHAyBO2C,E,uKAlBX,OACE,yBAAKC,GAAG,cACN,kBAAC,EAAD,CAAiB/B,MAAM,cAEnB4B,EAASI,KAAI,SAACC,GACZ,OACE,kBAAC,EACKA,Y,GATGtC,IAAMC,WC1CzBsC,G,OAAe,CACrB,CACE,YAAe,SACf,KAAQ,WACR,OAAU,4CACV,SAAY,+BACZ,KAAQ,oCACR,MAAS,CF2BiB,CAAC,aAAc,qBE3BjBL,EFOE,CAAC,QAAS,sBACV,CAAC,aAAc,sBAjBf,CAAC,SAAU,wBEUrC,MAAS,0DACT,YACE,wBAAI1C,UAAU,+BACZ,mIACA,kJACA,yHAEH,CACD,YAAe,QACf,KAAQ,WACR,MAAS,CAAC0C,EFIgB,CAAC,WAAY,mBACb,CAAC,uBAAwB,oBEJnD,MAAS,qCACT,YACE,wBAAI1C,UAAU,+BACZ,sGACA,2GACA,8FACA,iGAEH,CACD,YAAe,SACf,KAAQ,WACR,OAAU,2CACV,MAAS,CFViB,CAAC,MAAO,mBAWR,CAAC,QAAS,qBAJV,CAAC,MAAO,oBEGW0C,EAAWA,EAAmBA,GAC3E,MAAS,sCACT,YACE,wBAAI1C,UAAU,+BACZ,gJACA,iGACA,qGAEH,CACD,YAAe,QACf,KAAQ,WACR,OAAU,gDACV,MAAS,CAAC0C,EAAYA,EAAWA,EF/BP,CAAC,SAAU,sBAFX,CAAC,YAAa,uBEkCxC,MAAS,yCACT,YACE,wBAAI1C,UAAU,+BACZ,qGACA,mGACA,iGAEH,CACD,YAAe,SACf,KAAQ,WACR,MAAS,CAAC0C,EF7BgB,CAAC,wBAAyB,wBE8BpD,MAAS,kDACT,YACE,wBAAI1C,UAAU,+BACZ,+FACA,sHAyBSgD,E,uKAlBX,OACE,yBAAKJ,GAAG,YACN,kBAAC,EAAD,CAAiB/B,MAAM,YAEnBkC,EAAaF,KAAI,SAACI,GAChB,OACE,kBAAC,EACKA,Y,GATCzC,IAAMC,WClDdyC,MAZf,WACE,OACE,yBAAKlD,UAAU,OAEb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFcmD,QACW,cAA7BC,OAAOzB,SAAS0B,UAEe,UAA7BD,OAAOzB,SAAS0B,UAEhBD,OAAOzB,SAAS0B,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.d82847a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.30eb9a50.jpg\";","import React from \"react\";\r\nimport \"./Introduction.css\"\r\n\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport Particles from \"react-particles-js\";\r\n\r\nclass Introduction extends React.Component {\r\n     render() {\r\n        return(\r\n            <div className=\"introduction\">\r\n              <Particles className=\"particles-bg\"\r\n                         params={{\r\n                           \"particles\": {\r\n                             \"color\" : {\r\n                               \"value\" : \"#FFF\"\r\n                             },\r\n                             \"number\": {\r\n                               \"value\": 150,\r\n                               \"density\": {\r\n                                 \"enable\": false\r\n                               }\r\n                             },\r\n                             \"size\": {\r\n                               \"value\": 3,\r\n                               \"random\": true,\r\n                               \"anim\": {\r\n                                 \"speed\": 1,\r\n                                 \"size_min\": 0.1\r\n                               }\r\n                             },\r\n                             \"line_linked\": {\r\n                               \"enable\": false\r\n                             },\r\n                             \"move\": {\r\n                               \"random\": true,\r\n                               \"speed\": 1,\r\n                               \"direction\": \"random\",\r\n                               \"out_mode\": \"out\"\r\n                             }\r\n                           }\r\n                         }}\r\n              />\r\n              <div className=\"introduction-content\">\r\n                <img className=\"profile-image\" src={require(\"../assets/me.jpg\")} alt=\"Gregory Ho\"/>\r\n                <h1 className=\"name\">I'm Gregory Ho</h1>\r\n                <h5 className=\"text-box\">\r\n                  I'm currently completing my 3rd year in Computer Engineering at the University of Waterloo. I decided to go into computer engineering because I have a strong interest in both software and hardware, as well as the bridge that connects them together. Most of my experience has been in web development, but I also plan on getting some hardware experience before I complete my degree. Besides work, I enjoy the outdoors and doing activities with friends and co-workers. I would never turn down an invite to go camping, canoeing, finishing, hiking, exploring, ... I think you get the point. If you are interested in my work, my hobbies, or just someone I have not talked to in a while feel free to connect with me through one of the links below. I would be happy to hear from you!\r\n                </h5>\r\n                <div className=\"social\">\r\n                  <a className=\"col-4 contact-icon linkedin-icon\" href=\"https://www.linkedin.com/in/gregory-ho/\">\r\n                    <LinkedInIcon fontSize=\"large\" style={{fontSize: '40px'}}/><span className=\"contact-text\">linkedin.com/in/gregory-ho</span>\r\n                  </a>\r\n                  <a className=\"col-4 contact-icon\" href=\"mailto:gregory.ho@uwaterloo.ca\">\r\n                    <MailOutlineIcon fontSize=\"large\" style={{fontSize: '40px'}}/><span className=\"contact-text\">gregory.ho@uwaterloo.ca</span>\r\n                  </a>\r\n                  <a className=\"col-4 contact-icon github-icon\" href=\"https://github.com/Gregory-Ho\">\r\n                    <GitHubIcon fontSize=\"large\" style={{fontSize: '40px'}}/><span className=\"contact-text\">github.com/Gregory-Ho</span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Introduction;","import React from \"react\";\r\nimport \"./TimelineWrapper.css\"\r\n\r\nclass TimelineWrapper extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row \">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"section-title text-center\">\r\n              <h2>{this.props.title}</h2>\r\n              <div className=\"under-line\">\r\n                <div className=\"line-up\">\r\n                  <div className=\"dot\"></div>\r\n                  <div className=\"dot\"></div>\r\n                  <div className=\"dot\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"timeline-page\">\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimelineWrapper;","import React from \"react\";\r\nimport \"./ToolPill.css\"\r\n\r\nclass ToolPill extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className={\"tool-pill \" + this.props.tool[1]}>\r\n        {this.props.tool[0]}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToolPill;","import React from \"react\";\r\n\r\nimport ToolPill from \"../tool-pill/ToolPill\";\r\n\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nimport \"./TimelineContent.css\"\r\n\r\nclass TimelineContent extends React.Component {\r\n  render() {\r\n    let layoutClass = this.props.layoutClass\r\n\r\n    let toolList = [];\r\n    if (this.props.tools) {\r\n      this.props.tools.forEach((tool) => {\r\n        if (layoutClass === \" left\") {\r\n          toolList.push(<ToolPill tool={tool}/>);\r\n        } else {\r\n          toolList.unshift(<ToolPill tool={tool}/>);\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    let info = <div className=\"col-lg-6\">\r\n      <div className={\"item-info item-box\" + layoutClass}>\r\n        {\r\n          this.props.company &&\r\n          <div className=\"company\">\r\n            {this.props.company}\r\n            <BusinessIcon className={\"company-icon\" + layoutClass}/>\r\n          </div>\r\n        }\r\n        {\r\n          this.props.date &&\r\n          <div className=\"date\">\r\n            {this.props.date}\r\n            <DateRangeIcon className={\"date-icon\" + layoutClass}/>\r\n          </div>\r\n        }\r\n        {\r\n          this.props.location &&\r\n          <div className=\"location\">\r\n            {this.props.location}\r\n            <LocationOnIcon className={\"location-icon\" + layoutClass}/>\r\n          </div>\r\n        }\r\n        {\r\n          this.props.github &&\r\n            <div className=\"github\">\r\n              <a href={this.props.github}>\r\n                Check it out on GitHub!\r\n              </a>\r\n              <GitHubIcon className={\"github-icon\" + layoutClass}/>\r\n            </div>\r\n        }\r\n        {\r\n          this.props.link && this.props.linkText &&\r\n          <div className=\"project-link\">\r\n            <a href={this.props.link}>\r\n              {this.props.linkText}\r\n            </a>\r\n            <PublicIcon className={\"link-icon\" + layoutClass}/>\r\n          </div>\r\n        }\r\n        {\r\n          this.props.tools &&\r\n          <div className=\"tools\">\r\n            {toolList}\r\n            <BuildIcon className={\"tools-icon\" + layoutClass}/>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>;\r\n\r\n    let description = <div className=\"col-lg-6\">\r\n      <div className={\"item-description item-box\" + layoutClass} >\r\n        <div className={\"arrow\" + layoutClass}/>\r\n        <h3>\r\n          {this.props.title}\r\n        </h3>\r\n        <p className=\"timeline-subtitle\">\r\n          {this.props.description}\r\n        </p>\r\n      </div>\r\n    </div>;\r\n\r\n    return(\r\n      <div className=\"timeline-item\">\r\n        <div className=\"row\">\r\n          {layoutClass === \" left\" ? info : description}\r\n          {layoutClass === \" left\" ? description : info}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimelineContent;","export const Cpp          = [\"C++\", \"tool-color-language\"];\r\nexport const C            = [\"C\", \"tool-color-language\"];\r\nexport const JAVA         = [\"Java\", \"tool-color-language\"];\r\nexport const JAVASCRIPT   = [\"Javascript\", \"tool-color-language\"];\r\nexport const PYTHON       = [\"Python\", \"tool-color-language\"];\r\nexport const RUBY         = [\"Ruby\", \"tool-color-language\"];\r\nexport const GO           = [\"Go\", \"tool-color-language\"];\r\nexport const SQL          = [\"SQL\", \"tool-color-language\"];\r\nexport const APEX         = [\"Apex\", \"tool-color-language\"];\r\n\r\nexport const HTML         = [\"HTML\", \"tool-color-web\"];\r\nexport const CSS          = [\"CSS\", \"tool-color-web\"];\r\nexport const REACT        = [\"React\", \"tool-color-web\"];\r\nexport const ANGULAR      = [\"Angular\", \"tool-color-web\"];\r\nexport const VISUALFORCE  = [\"Visualforce\", \"tool-color-web\"];\r\n\r\nexport const BOOTSTRAP    = [\"Bootstrap\", \"tool-color-library\"];\r\nexport const REDUX        = [\"Redux\", \"tool-color-library\"];\r\nexport const JQUERY       = [\"jQuery\", \"tool-color-library\"];\r\nexport const SPRING_BOOT  = [\"Spring Boot\", \"tool-color-library\"];\r\nexport const NUMPY        = [\"NumPy\", \"tool-color-library\"];\r\nexport const TENSORFLOW   = [\"Tensorflow\", \"tool-color-library\"];\r\nexport const RABBITMQ     = [\"RabbitMQ\", \"tool-color-library\"];\r\n\r\nexport const POSTMAN      = [\"Postman\", \"tool-color-tool\"];\r\nexport const INTELLIJ     = [\"IntelliJ\", \"tool-color-tool\"];\r\nexport const JIRA         = [\"Jira\", \"tool-color-tool\"];\r\nexport const GIT          = [\"Git\", \"tool-color-tool\"];\r\nexport const DIPTRACE     = [\"DipTrace\", \"tool-color-tool\"];\r\nexport const CCC          = [\"Code Composer Studio\", \"tool-color-tool\"];\r\n\r\nexport const PIC32        = [\"PIC32 Microcontroller\", \"tool-color-hardware\"];\r\nexport const OMEGA2       = [\"Omega 2\", \"tool-color-hardware\"];\r\n\r\nexport const AWS          = [\"AWS\", \"tool-color-cloud\"];\r\nexport const SALESFORCE   = [\"Salesforce\", \"tool-color-cloud\"];\r\n\r\n\r\nexport const MAVEN        = [\"Maven\", \"tool-color-devops\"];\r\nexport const DOCKER       = [\"Docker\", \"tool-color-devops\"];\r\nexport const OPENAI       = [\"OpenAI Gym\", \"tool-color-devops\"];\r\n","import React from \"react\";\r\nimport \"./Experience.css\"\r\nimport TimelineWrapper from \"../util/timeline/TimelineWrapper\";\r\nimport TimelineContent from \"../util/timeline/TimelineContent\";\r\nimport * as Tools from \"../util/tool-pill/Tools\";\r\n\r\nconst JobsList = [\r\n{\r\n  \"layoutClass\": \" left\",\r\n  \"company\": \"StackAdapt\",\r\n  \"date\": \"Sep 2019 - Dec 2019\",\r\n  \"location\": \"Toronto, ON\",\r\n  \"tools\": [Tools.REACT, Tools.REDUX, Tools.RUBY, Tools.GO, Tools.JAVASCRIPT, Tools.HTML, Tools.CSS],\r\n  \"title\": \"Full Stack Developer\",\r\n  \"description\":\r\n    <ul className=\"item-description-list left\">\r\n      <li>Implemented an automation system to detect similar ads which had already been reviewed to reduce the auditing team’s workload by 20%</li>\r\n      <li>Redesigned our audience webpage to display metrics, which are aggregated over millions of trackers, in new formats</li>\r\n      <li>Worked with product managers and designers to analyze and implement new features from front-end to database using React, Ruby, and Go</li>\r\n    </ul>\r\n}, {\r\n  \"layoutClass\": \" right\",\r\n  \"company\": \"Ultimate Software\",\r\n  \"date\": \"Jan 2019 - Apr 2019\",\r\n  \"location\": \"Toronto, ON\",\r\n  \"tools\": [Tools.INTELLIJ, Tools.POSTMAN, Tools.RABBITMQ, Tools.ANGULAR, Tools.SPRING_BOOT, Tools.JAVA],\r\n  \"title\": \"Software Test Engineer\",\r\n  \"description\":\r\n    <ul className=\"item-description-list right\">\r\n      <li>Wrote integration and unit tests with JUnit to ensure microservices functioned as expected and maintained a 99% uptime</li>\r\n      <li>Improved existing tests by refactoring code structure and redesigning time sensitive tests to ensure consistent test reliability</li>\r\n      <li>Conducted end-to-end testing of new features from UI to database</li>\r\n    </ul>\r\n}, {\r\n    \"layoutClass\": \" left\",\r\n    \"company\": \"Allstream\",\r\n    \"date\": \"May 2018 - Aug 2018\",\r\n    \"location\": \"Toronto, ON\",\r\n    \"tools\": [Tools.SALESFORCE, Tools.VISUALFORCE, Tools.APEX, Tools.JAVA, Tools.JIRA, Tools.SQL],\r\n    \"title\": \"IT Co-op - Salesforce Development\",\r\n    \"description\":\r\n      <ul className=\"item-description-list right\">\r\n        <li>Implemented new functionality using Visualforce pages, Apex classes and triggers, validation rules, and workflows</li>\r\n        <li>Wrote Apex test classes which tested over 8000 lines of code to improve code coverage</li>\r\n      </ul>\r\n  }\r\n];\r\n\r\nclass Experience extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"experience\">\r\n        <TimelineWrapper title=\"Experience\">\r\n          {\r\n            JobsList.map((job) => {\r\n              return (\r\n                <TimelineContent\r\n                  {...job}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </TimelineWrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Experience;","import React from \"react\";\r\nimport \"./Projects.css\"\r\nimport TimelineWrapper from \"../util/timeline/TimelineWrapper\";\r\nimport TimelineContent from \"../util/timeline/TimelineContent\";\r\nimport * as Tools from \"../util/tool-pill/Tools\";\r\n\r\nconst ProjectsList = [\r\n{\r\n  \"layoutClass\": \" right\",\r\n  \"date\": \"Jul 2020\",\r\n  \"github\": \"https://github.com/Gregory-Ho/RLTicTacToe\",\r\n  \"linkText\": \"Play Against The Model Here!\",\r\n  \"link\": \"https://gregoryho.me/RLTicTacToe/\",\r\n  \"tools\": [Tools.OPENAI, Tools.REACT, Tools.NUMPY, Tools.TENSORFLOW, Tools.PYTHON],\r\n  \"title\": \"T-Cubed – Reinforcement Learning Tic Tac Toe Model\",\r\n  \"description\":\r\n    <ul className=\"item-description-list right\">\r\n      <li>Created a Tic Tac Toe learning environment with OpenAI Gym and trained model using policy gradients</li>\r\n      <li>Refactored model multiple times and modified learning parameters to achieve a 97% win rate against a random player</li>\r\n      <li>Hosted model on AWS using TensorFlow Serving to serve model predictions over a REST API</li>\r\n    </ul>\r\n}, {\r\n  \"layoutClass\": \" left\",\r\n  \"date\": \"Jul 2019\",\r\n  \"tools\": [Tools.C, Tools.DIPTRACE, Tools.CCC],\r\n  \"title\": \"CoolAid – Clap Controlled Fan\",\r\n  \"description\":\r\n    <ul className=\"item-description-list right\">\r\n      <li>System which allows the user to control a fan’s speed using claps</li>\r\n      <li>Designed an add-on PCB from scratch to attach to a Texas Instruments MSP430</li>\r\n      <li>Uses an electret mic and op-amp circuit to get an input signal</li>\r\n      <li>Followed the engineering process from prototyping to production</li>\r\n    </ul>\r\n}, {\r\n  \"layoutClass\": \" right\",\r\n  \"date\": \"Mar 2019\",\r\n  \"github\": \"https://github.com/Gregory-Ho/work-board\",\r\n  \"tools\": [Tools.GIT, Tools.MAVEN, Tools.AWS, Tools.SQL, Tools.SPRING_BOOT, Tools.ANGULAR],\r\n  \"title\": \"WorkBoard – Agenda and Planner\",\r\n  \"description\":\r\n    <ul className=\"item-description-list right\">\r\n      <li>Responsive full stack web application that helps users track tasks and provides statistics on their productivity</li>\r\n      <li>Used REST endpoints to communicate between front-end and back-end</li>\r\n      <li>Hosted using AWS with a pipeline deploying from a GitHub repository</li>\r\n    </ul>\r\n}, {\r\n  \"layoutClass\": \" left\",\r\n  \"date\": \"Aug 2018\",\r\n  \"github\": \"https://github.com/Gregory-Ho/Daily-Dashboard\",\r\n  \"tools\": [Tools.HTML, Tools.CSS, Tools.JAVASCRIPT, Tools.JQUERY, Tools.BOOTSTRAP],\r\n  \"title\": \"DailyDash – News and Weather Feed\",\r\n  \"description\":\r\n    <ul className=\"item-description-list right\">\r\n      <li>Designed a dashboard which displays live news and weather by location</li>\r\n      <li>Used REST APIs from news and weather providers to populate the page</li>\r\n      <li>Created custom circular progress bar animation using JavaScript</li>\r\n    </ul>\r\n}, {\r\n  \"layoutClass\": \" right\",\r\n  \"date\": \"May 2017\",\r\n  \"tools\": [Tools.C, Tools.PIC32],\r\n  \"title\": \"Line Following Robot – High School Project\",\r\n  \"description\":\r\n    <ul className=\"item-description-list right\">\r\n      <li>Designed a robot from scratch using IR sensors and servo motors</li>\r\n      <li>Improved performance by adjusting timings and repositioning the sensors and motors</li>\r\n    </ul>\r\n}\r\n];\r\n\r\nclass Projects extends React.Component {\r\n  render() {\r\n    return(\r\n      <div id=\"projects\">\r\n        <TimelineWrapper title=\"Projects\">\r\n          {\r\n            ProjectsList.map((project) => {\r\n              return (\r\n                <TimelineContent\r\n                  {...project}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </TimelineWrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\nimport './App.css';\nimport Introduction from \"./Introduction/Introduction\";\nimport Experience from \"./Experience/Experience\";\nimport Projects from \"./Projects/Projects\";\n// import Contact from \"./Contact/Contact\";\n// import Nav from \"./nav/nav\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/*<Nav/>*/}\n      <Introduction/>\n      <Experience/>\n      <Projects/>\n      {/*<Contact/>*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}